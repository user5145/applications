app-id: com.blizzard.Diablo2
branch: alfa

runtime: org.winepak.Platform/i386
runtime-version: 3.0
sdk: org.winepak.Sdk/i386

command: start

tags:
- proprietary

finish-args:
  - --socket=x11
  - --share=ipc
  - --socket=pulseaudio
  - --device=dri
  - --allow=multiarch
  - --device=all
  - --share=network
  - --persist=xdg-desktop
  - --env=WINEPREFIX=/var/data/win32
  - --env=WINEARCH=win32
  - --env=WINEDEBUG=-all

add-extensions:
  com.blizzard.Diablo2.LordofDestruction:
    directory: extensions/lod
    version: alfa
    subdirectories: false
    autodelete: false
    no-autodownload: true

  com.blizzard.Diablo2.glide:
    directory: extensions/glide
    version: alfa
    subdirectories: false
    autodelete: false
    no-autodownload: false

modules:
  - name: diablo
    buildsystem: simple
    build-commands:
      - mkdir -p /app/bin
      - install -Dm555 Downloader_Diablo2_enUS.exe /app/bin
      

    sources:
      - type: file
        path: Downloader_Diablo2_enUS.exe


  - name: setup
    buildsystem: simple
    build-commands:
      - mkdir -p /app/bin
      - install -Dm555 start /app/bin
      - install -Dm555 installer /app/bin
      - install -Dm555 tweaks /app/bin

    sources:
      - type: script
        dest-filename: installer
        commands:
          - mkdir -p $WINEPREFIX
          - wineboot
          - tweaks
          -
          - wine /app/bin/Downloader_Diablo2_enUS.exe

      - type: script
        dest-filename: tweaks
        commands:
          - #tweaks
          - #XRandr breaks movies when in fullscreen
          - wine reg add 'HKEY_CURRENT_USER\Software\Wine\X11 Driver' /v UseXRandR /d N /f

      - type: script
        dest-filename: start
        commands:
          - #install diablo2
          - if ! [ -e "${WINEPREFIX}/drive_c/Program Files/Diablo II/Diablo II.exe" ] ; then
          -     echo "installing Diablo 2"
          -     source /app/bin/installer
          -     if [[ $? != 0 ]]; then
          -         echo "Installation failed, abort."
          -         exit 1
          -     fi
          -     exit 0
          - fi
          -
          - #install extensions
          - for f in /app/extensions/*/bin/installer ; do
          -      test -f "$f" && "$f"
          -      # close if installed
          -      if [[ $? != 1 && $? != 0 ]]; then
          -           echo "exited."
          -           exit 1
          -      fi
          - done
          -
          - # remove old files
          - rm -Rf "${WINEPREFIX}/drive_c/users/$USER/Desktop/D2-1.14b-Installer-*"
          -
          - # launch
          - # start extensions
          - for f in /app/extensions/*/bin/starter ; do
          -      test -f "$f" && source "$f"
          - done
          -
          - echo "launching Diablo 2"
          - cd "/var/data/win32/drive_c/Program Files/Diablo II/"
          - 'wine "C:/Program Files/Diablo II/Diablo II.exe" -w $@'

  - name: resources
    buildsystem: simple
    build-commands:
      - install -Dm644 com.blizzard.Diablo2.png /app/share/icons/hicolor/128x128/apps/com.blizzard.Diablo2.png
      - install -Dm644 com.blizzard.Diablo2.appdata.xml /app/share/appdata/com.blizzard.Diablo2.appdata.xml
      - install -Dm644 com.blizzard.Diablo2.desktop /app/share/applications/com.blizzard.Diablo2.desktop

    sources:
      - type: file
        path: com.blizzard.Diablo2.png

      - type: file
        path: com.blizzard.Diablo2.appdata.xml

      - type: file
        path: com.blizzard.Diablo2.desktop

    post-install:
    - mkdir -p /app/extensions/lod
    - mkdir -p /app/extensions/glide
